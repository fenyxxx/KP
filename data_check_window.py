# -*- coding: utf-8 -*-
"""
–û–∫–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
"""

import tkinter as tk
from tkinter import ttk, messagebox, scrolledtext
from data_validator import DataValidator
from styles import apply_styles, COLORS, create_styled_button


class DataCheckWindow:
    """–ö–ª–∞—Å—Å –æ–∫–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self, parent, db, year):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫–Ω–∞
        
        Args:
            parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ
            db: –û–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            year: –ì–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        """
        self.db = db
        self.year = year
        self.validator = DataValidator(db)
        
        # –°–æ–∑–¥–∞—ë–º –æ–∫–Ω–æ
        self.window = tk.Toplevel(parent)
        self.window.title(f"–î–Æ–°–ö –Ø–º–±—É—Ä–≥ - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞ {year} –≥–æ–¥")
        self.window.geometry("900x700")
        self.window.transient(parent)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å
        apply_styles(self.window)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ (–¥–ª—è Red OS –∏ –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º)
        self.window.protocol("WM_DELETE_WINDOW", self.window.destroy)
        
        self._create_widgets()
        self._run_check()
    
    def _create_widgets(self):
        """–°–æ–∑–¥–∞—Ç—å –≤–∏–¥–∂–µ—Ç—ã –æ–∫–Ω–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header_frame = ttk.Frame(self.window, padding="15")
        header_frame.pack(fill=tk.X)
        
        ttk.Label(
            header_frame,
            text=f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞ {self.year} –≥–æ–¥",
            style='Header.TLabel'
        ).pack(anchor='w')
        
        # –û–±–ª–∞—Å—Ç—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        content_frame = ttk.Frame(self.window, padding="15")
        content_frame.pack(fill=tk.BOTH, expand=True)
        
        # –†–µ–∑—é–º–µ
        summary_frame = tk.Frame(content_frame, bg=COLORS['bg_dark'], relief='solid', bd=1)
        summary_frame.pack(fill=tk.X, pady=(0, 10))
        
        ttk.Label(
            summary_frame,
            text="üìä –†–µ–∑—é–º–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:",
            font=('Segoe UI', 11, 'bold'),
            background=COLORS['bg_dark']
        ).pack(anchor='w', padx=10, pady=(10, 5))
        
        self.summary_text = tk.Text(
            summary_frame,
            height=5,
            font=('Segoe UI', 10),
            bg=COLORS['white'],
            wrap=tk.WORD,
            relief='flat'
        )
        self.summary_text.pack(fill=tk.X, padx=10, pady=(0, 10))
        
        # –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–±–ª–µ–º
        ttk.Label(
            content_frame,
            text="üìã –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º:",
            font=('Segoe UI', 11, 'bold')
        ).pack(anchor='w', pady=(10, 5))
        
        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å –¥–µ—Ç–∞–ª—è–º–∏
        details_frame = ttk.Frame(content_frame)
        details_frame.pack(fill=tk.BOTH, expand=True)
        
        self.details_text = scrolledtext.ScrolledText(
            details_frame,
            font=('Segoe UI', 9),
            wrap=tk.WORD,
            bg=COLORS['white']
        )
        self.details_text.pack(fill=tk.BOTH, expand=True)
        
        # –ö–Ω–æ–ø–∫–∏
        button_frame = ttk.Frame(self.window, padding="15")
        button_frame.pack(fill=tk.X)
        
        create_styled_button(
            button_frame,
            "üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É",
            self._run_check,
            'secondary'
        ).pack(side=tk.LEFT, padx=5)
        
        create_styled_button(
            button_frame,
            "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á—ë—Ç",
            self._save_report,
            'primary'
        ).pack(side=tk.LEFT, padx=5)
        
        create_styled_button(
            button_frame,
            "–ó–∞–∫—Ä—ã—Ç—å",
            self.window.destroy,
            'normal'
        ).pack(side=tk.RIGHT, padx=5)
    
    def _run_check(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –¥–∞–Ω–Ω—ã—Ö"""
        # –û—á–∏—â–∞–µ–º –ø–æ–ª—è
        self.summary_text.delete('1.0', tk.END)
        self.details_text.delete('1.0', tk.END)
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        results = self.validator.check_all(self.year)
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—é–º–µ
        summary = self.validator.get_summary(results)
        self.summary_text.insert('1.0', summary)
        self.summary_text.config(state='disabled')
        
        # –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª–∏
        total_issues = sum(len(issues) for issues in results.values())
        
        if total_issues == 0:
            self.details_text.insert('1.0', "–û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.")
            self.details_text.config(state='disabled')
            return
        
        details = ""
        issue_num = 1
        
        # –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –±–µ–∑ –±—é–¥–∂–µ—Ç–∞
        if results['zero_total_budget']:
            details += "‚ïê" * 80 + "\n"
            details += "‚ùå –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø –ë–ï–ó –ë–Æ–î–ñ–ï–¢–ê\n"
            details += "‚ïê" * 80 + "\n\n"
            for issue in results['zero_total_budget']:
                details += f"{issue_num}. {issue['name']}\n"
                details += f"   –ú–µ—Å—è—Ü: {issue['month']}\n"
                details += f"   –ü—Ä–æ–±–ª–µ–º–∞: {issue['issue']}\n"
                details += f"   ID: {issue['id']}\n\n"
                issue_num += 1
        
        # –ü—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã–µ –±–µ–∑ –¥–∞—Ç
        if results['no_actual_dates']:
            details += "‚ïê" * 80 + "\n"
            details += "üìÖ –ü–†–û–í–ï–î–Å–ù–ù–´–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø –ë–ï–ó –§–ê–ö–¢–ò–ß–ï–°–ö–ò–• –î–ê–¢\n"
            details += "‚ïê" * 80 + "\n\n"
            for issue in results['no_actual_dates']:
                details += f"{issue_num}. {issue['name']}\n"
                details += f"   –ú–µ—Å—è—Ü: {issue['month']}\n"
                details += f"   –ü—Ä–æ–±–ª–µ–º–∞: {issue['issue']}\n"
                details += f"   ID: {issue['id']}\n\n"
                issue_num += 1
        
        # –û—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã
        if results['no_cancellation_reason']:
            details += "‚ïê" * 80 + "\n"
            details += "üìù –û–¢–ú–ï–ù–Å–ù–ù–´–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø –ë–ï–ó –ü–†–ò–ß–ò–ù–´\n"
            details += "‚ïê" * 80 + "\n\n"
            for issue in results['no_cancellation_reason']:
                details += f"{issue_num}. {issue['name']}\n"
                details += f"   –ú–µ—Å—è—Ü: {issue['month']}\n"
                details += f"   –ü—Ä–æ–±–ª–µ–º–∞: {issue['issue']}\n"
                details += f"   ID: {issue['id']}\n\n"
                issue_num += 1
        
        # –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
        if results['suspicious_budget']:
            details += "‚ïê" * 80 + "\n"
            details += "üí∞ –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–ï –§–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –†–ê–°–•–û–î–´\n"
            details += "‚ïê" * 80 + "\n\n"
            for issue in results['suspicious_budget']:
                details += f"{issue_num}. {issue['name']}\n"
                details += f"   –ú–µ—Å—è—Ü: {issue['month']}\n"
                details += f"   –ü—Ä–æ–±–ª–µ–º–∞: {issue['issue']}\n"
                details += f"   ID: {issue['id']}\n\n"
                issue_num += 1
        
        # –í—ã–µ–∑–¥–Ω—ã–µ –±–µ–∑ —Ç—Ä–µ–Ω–µ—Ä–æ–≤
        if results['no_trainers']:
            details += "‚ïê" * 80 + "\n"
            details += "üë®‚Äçüè´ –í–´–ï–ó–î–ù–´–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø –ë–ï–ó –¢–†–ï–ù–ï–†–û–í\n"
            details += "‚ïê" * 80 + "\n\n"
            for issue in results['no_trainers']:
                details += f"{issue_num}. {issue['name']}\n"
                details += f"   –ú–µ—Å—è—Ü: {issue['month']}\n"
                details += f"   –ü—Ä–æ–±–ª–µ–º–∞: {issue['issue']}\n"
                details += f"   ID: {issue['id']}\n\n"
                issue_num += 1
        
        self.details_text.insert('1.0', details)
        self.details_text.config(state='disabled')
    
    def _save_report(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á—ë—Ç –≤ —Ñ–∞–π–ª"""
        from tkinter import filedialog
        
        filename = filedialog.asksaveasfilename(
            title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏",
            defaultextension=".txt",
            filetypes=[
                ("–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", "*.txt"),
                ("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*")
            ],
            initialfile=f"data_check_{self.year}.txt"
        )
        
        if not filename:
            return
        
        try:
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(f"–û–¢–ß–Å–¢ –ü–†–û–í–ï–†–ö–ò –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –î–ê–ù–ù–´–•\n")
                f.write(f"–ì–æ–¥: {self.year}\n")
                f.write(f"=" * 80 + "\n\n")
                
                # –†–µ–∑—é–º–µ
                summary = self.summary_text.get('1.0', tk.END)
                f.write(summary)
                f.write("\n" + "=" * 80 + "\n\n")
                
                # –î–µ—Ç–∞–ª–∏
                details = self.details_text.get('1.0', tk.END)
                f.write(details)
            
            messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", f"–û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω:\n{filename}")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á—ë—Ç:\n{str(e)}")

