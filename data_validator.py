# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
"""

from typing import List, Dict
from models import Event


class DataValidator:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"""
    
    def __init__(self, db):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
        
        Args:
            db: –û–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        """
        self.db = db
    
    def check_all(self, year: int) -> Dict[str, List[Dict]]:
        """
        –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ–¥–∞
        
        Args:
            year: –ì–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫
        """
        results = {
            'no_budget': [],
            'no_actual_dates': [],
            'no_cancellation_reason': [],
            'zero_total_budget': [],
            'suspicious_budget': [],
            'no_trainers': []
        }
        
        events_data = self.db.get_events_by_year(year)
        
        for row in events_data:
            event = Event.from_db_row(row)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –±–µ–∑ –±—é–¥–∂–µ—Ç–∞
            if event.children_budget == 0 and event.trainers_budget == 0:
                results['zero_total_budget'].append({
                    'id': event.id,
                    'name': event.name,
                    'month': event.month,
                    'issue': '–ù–µ—Ç –±—é–¥–∂–µ—Ç–∞ –Ω–∏ –Ω–∞ –¥–µ—Ç–µ–π, –Ω–∏ –Ω–∞ —Ç—Ä–µ–Ω–µ—Ä–æ–≤'
                })
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ü—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã–µ –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞—Ç
            if event.status == "–ü—Ä–æ–≤–µ–¥–µ–Ω–æ":
                if not event.actual_start_date or not event.actual_end_date:
                    results['no_actual_dates'].append({
                        'id': event.id,
                        'name': event.name,
                        'month': event.month,
                        'issue': '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ, –Ω–æ –Ω–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞—Ç'
                    })
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –û—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã
            if event.status == "–û—Ç–º–µ–Ω–µ–Ω–æ":
                if not event.cancellation_reason:
                    results['no_cancellation_reason'].append({
                        'id': event.id,
                        'name': event.name,
                        'month': event.month,
                        'issue': '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ, –Ω–æ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞'
                    })
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã (> –ø–ª–∞–Ω * 2)
            if event.status == "–ü—Ä–æ–≤–µ–¥–µ–Ω–æ":
                if event.actual_children_budget and event.children_budget > 0:
                    if event.actual_children_budget > event.children_budget * 2:
                        results['suspicious_budget'].append({
                            'id': event.id,
                            'name': event.name,
                            'month': event.month,
                            'issue': f'–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –¥–µ—Ç–µ–π ({event.actual_children_budget:.2f} ‚ÇΩ) ' +
                                   f'–ø—Ä–µ–≤—ã—à–∞—é—Ç –ø–ª–∞–Ω –≤ 2+ —Ä–∞–∑–∞ ({event.children_budget:.2f} ‚ÇΩ)'
                        })
                
                if event.actual_trainers_budget and event.trainers_budget > 0:
                    if event.actual_trainers_budget > event.trainers_budget * 2:
                        results['suspicious_budget'].append({
                            'id': event.id,
                            'name': event.name,
                            'month': event.month,
                            'issue': f'–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ ({event.actual_trainers_budget:.2f} ‚ÇΩ) ' +
                                   f'–ø—Ä–µ–≤—ã—à–∞—é—Ç –ø–ª–∞–Ω –≤ 2+ —Ä–∞–∑–∞ ({event.trainers_budget:.2f} ‚ÇΩ)'
                        })
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –í—ã–µ–∑–¥–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –±–µ–∑ —Ç—Ä–µ–Ω–µ—Ä–æ–≤
            if event.event_type == "–í—ã–µ–∑–¥–Ω–æ–µ":
                if not event.trainers_list and event.trainers_budget == 0:
                    results['no_trainers'].append({
                        'id': event.id,
                        'name': event.name,
                        'month': event.month,
                        'issue': '–í—ã–µ–∑–¥–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –±–µ–∑ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –Ω–∏—Ö'
                    })
        
        return results
    
    def get_summary(self, results: Dict[str, List[Dict]]) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Ä–µ–∑—é–º–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        
        Args:
            results: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫
            
        Returns:
            –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Ä–µ–∑—é–º–µ
        """
        total_issues = sum(len(issues) for issues in results.values())
        
        if total_issues == 0:
            return "‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã."
        
        summary = f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {total_issues}\n\n"
        
        if results['zero_total_budget']:
            summary += f"‚ùå –ë–µ–∑ –±—é–¥–∂–µ—Ç–∞: {len(results['zero_total_budget'])}\n"
        
        if results['no_actual_dates']:
            summary += f"üìÖ –ü—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã–µ –±–µ–∑ –¥–∞—Ç: {len(results['no_actual_dates'])}\n"
        
        if results['no_cancellation_reason']:
            summary += f"üìù –û—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã: {len(results['no_cancellation_reason'])}\n"
        
        if results['suspicious_budget']:
            summary += f"üí∞ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã: {len(results['suspicious_budget'])}\n"
        
        if results['no_trainers']:
            summary += f"üë®‚Äçüè´ –í—ã–µ–∑–¥–Ω—ã–µ –±–µ–∑ —Ç—Ä–µ–Ω–µ—Ä–æ–≤: {len(results['no_trainers'])}\n"
        
        return summary

